1.  首先，生成目标文件，此时要加编译器选项-fpic

g++ -fPIC -c DynamicMath.cpp
-fPIC 创建与地址无关的编译程序（pic，position independent code），是为了能够在多个应用程序间共享。

2.  然后，生成动态库，此时要加链接器选项-shared

g++ -shared -o libdynmath.so DynamicMath.o
-shared指定生成动态链接库。
其实上面两个步骤可以合并为一个命令：

g++ -fPIC -shared -o libdynmath.so DynamicMath.cpp
3.










l  -shared ：指定生成动态链接库。

l  -static ：指定生成静态链接库。

l  -fPIC ：表示编译为位置独立的代码，用于编译共享库。目标文件需要创建成位置无关码， 念上就是在可执行程序装载它们的时候，它们可以放在可执行程序的内存里的任何地方。

l  -L. ：表示要连接的库所在的目录。

l  -l：指定链接时需要的动态库。编译器查找动态连接库时有隐含的命名规则，即在给出的名字前面加上lib，后面加上.a/.so来确定库的名称。

l  -Wall ：生成所有警告信息。

l  -ggdb ：此选项将尽可能的生成gdb 的可以使用的调试信息。

l  -g ：编译器在编译的时候产生调试信息。

l  -c ：只激活预处理、编译和汇编,也就是把程序做成目标文件(.o文件) 。

l  -Wl,options ：把参数(options)传递给链接器ld 。如果options 中间有逗号,就将options分成多个选项,然后传递给链接程序。
